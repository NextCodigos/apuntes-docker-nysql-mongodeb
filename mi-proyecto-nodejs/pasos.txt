2. Crear el proyecto Node.js
Si aún no tienes un proyecto de Node.js creado, sigue estos pasos para inicializar uno:

Inicializar un proyecto Node.js:

bash
￼Copiar código
mkdir mi-proyecto-nodejs
cd mi-proyecto-nodejs
npm init -y
Crear un archivo index.js:

Dentro de la carpeta del proyecto, crea un archivo llamado index.js con el siguiente contenido básico:

javascript
￼Copiar código
const http = require('http');

const PORT = process.env.PORT || 3000;

const server = http.createServer((req, res) => {
  res.statusCode = 200;
  res.setHeader('Content-Type', 'text/plain');
  res.end('¡Hola, mundo desde Docker con Node.js 18!');
});

server.listen(PORT, () => {
  console.log(`Servidor ejecutándose en http://localhost:${PORT}/`);
});
3. Crear el archivo Dockerfile
Crea un archivo llamado Dockerfile en el directorio del proyecto con el siguiente contenido:

dockerfile
￼Copiar código
# Usa la imagen oficial de Node.js 18
FROM node:18

# Establece el directorio de trabajo dentro del contenedor
WORKDIR /app

# Copia el archivo package.json y package-lock.json (si existe)
COPY package*.json ./

# Instala las dependencias
RUN npm install

# Copia el resto de los archivos de la aplicación
COPY . .

# Expone el puerto que usará la aplicación (ajústalo según el puerto que use tu app)
EXPOSE 3000

# Comando para iniciar la aplicación
CMD ["node", "index.js"]
4. Crear el archivo .dockerignore

5. Construir y ejecutar el contenedor
Ejecuta los siguientes comandos en la terminal:

Construir la imagen de Docker:

bash
￼Copiar código
docker build -t mi-app-nodejs:18 .
Ejecutar el contenedor:

bash
￼Copiar código
docker run -p 3000:3000 -d mi-app-nodejs:18
Esto mapeará el puerto 3000 del contenedor al puerto 3000 de tu sistema Fedora.

6. Verificar la ejecución
Abre tu navegador y ve a http://localhost:3000. Deberías ver el mensaje "¡Hola, mundo desde Docker con Node.js 18!".